[
  {
    "id": "c373de3f585a",
    "name": "hola_mundo",
    "processing_type": "Hola Mundo",
    "endpoint": "hola_mundo",
    "image_name": "hola_mundo",
    "folder_name": "hola_mundo_20251011030328",
    "port": "32785",
    "status": "created",
    "code": "def main(data=None):\n    \"\"\"\n    Devuelve un saludo simple.\n    \"\"\"\n    return {\n        \"status\": \"success\",\n        \"message\": \"Hola mundo desde el microservicio!\"\n    }\n"
  },
  {
    "id": "e5e376c280d6",
    "name": "suma_dos_numeros",
    "processing_type": "Suma",
    "endpoint": "suma_dos_numeros",
    "image_name": "suma_dos_numeros",
    "folder_name": "suma_dos_numeros_20251011030412",
    "port": "32786",
    "status": "created",
    "code": "# Microservicio Suma\n# Los parámetros 'a' y 'b' se pasan en la URL como /?a=5&b=3\n\ndef main(data=None):\n  \"\"\"\n  Suma dos números recibidos por parámetro.\n  Args:\n    data: dict con 'a' y 'b'\n  Returns:\n    dict con el resultado de la suma\n  \"\"\"\n  try:\n    a = float(data.get(\"a\", 0))\n    b = float(data.get(\"b\", 0))\n    resultado = a + b\n    return {\n      \"status\": \"success\",\n      \"suma\": resultado,\n      \"inputs\": {\"a\": a, \"b\": b}\n    }\n  except Exception as e:\n    return {\n      \"status\": \"error\",\n      \"message\": f\"Error: {str(e)}\"\n    }\n"
  },
  {
    "id": "e882773e69d0",
    "name": "Consulta_Roble",
    "processing_type": "Consulta Roble",
    "endpoint": "consulta_roble",
    "image_name": "consulta_roble",
    "folder_name": "consulta_roble_20251011030538",
    "port": "32787",
    "status": "created",
    "code": "# Microservicio Consulta Tabla Roble\n# El nombre de la tabla se pasa en la URL (?tableName=mi_tabla)\n# Puedes agregar más parámetros de filtro si lo desea (?columna=valor)\n# El token de acceso y el token_contract se envían por header.\n\ndef main(data=None):\n    \"\"\"\n    Consulta una tabla en Roble usando el token recibido por header y el token_contract recibido por header o parámetro.\n    \"\"\"\n    import requests\n    from flask import request\n\n    # Obtener el token de acceso desde el header Authorization\n    auth_header = request.headers.get('Authorization', '')\n    if not auth_header.startswith('Bearer '):\n        return {\"status\": \"error\", \"message\": \"Token de autenticación requerido\"}\n    token = auth_header.replace('Bearer ', '').strip()\n    if not token:\n        return {\"status\": \"error\", \"message\": \"Token vacío\"}\n\n    # Obtener el token_contract desde el header o parámetro\n    token_contract = request.headers.get('Token-Contract') or request.args.get('token_contract') or (data or {}).get(\"token_contract\")\n    if not token_contract:\n        return {\"status\": \"error\", \"message\": \"Token contract no recibido\"}\n\n    # El nombre de la tabla viene en los parámetros (?tableName=...)\n    table_name = request.args.get(\"tableName\") or (data or {}).get(\"tableName\", \"inventario\")\n\n    # Para agregar parámetros de filtro (?columna=valor)\n    params = {\"tableName\": table_name}\n    for k, v in (data or {}).items():\n        if k not in [\"token_contract\", \"tableName\", \"roble_token\"]:  \n            params[k] = v\n    for k, v in request.args.items():\n        if k not in [\"token_contract\", \"tableName\", \"roble_token\"]:  \n            params[k] = v\n\n    # Consulta la tabla en Roble\n    res = requests.get(\n        f\"https://roble-api.openlab.uninorte.edu.co/database/{token_contract}/read\",\n        headers={\"Authorization\": f\"Bearer {token}\"},\n        params=params\n    )\n    if res.status_code == 200:\n        return {\"status\": \"success\", \"roble_data\": res.json()}\n    elif res.status_code == 401:\n        return {\"status\": \"error\", \"message\": \"Token inválido o expirado\", \"code\": 401}\n    elif res.status_code == 403:\n        return {\"status\": \"error\", \"message\": \"Acceso denegado\", \"code\": 403}\n    else:\n        return {\"status\": \"error\", \"message\": f\"Roble error: {res.status_code}\", \"details\": res.text}\n"
  }
]