[
  {
    "id": "977b36ae13fc",
    "name": "ghnghn",
    "processing_type": "Hola Mundo",
    "endpoint": "ghnghn",
    "image_name": "ghnghn",
    "folder_name": "ghnghn_20251011054309",
    "port": "32806",
    "status": "created",
    "code": "def main(data=None):\n    \"\"\"\n    Devuelve un saludo simple.\n    \"\"\"\n    return {\n        \"status\": \"success\",\n        \"message\": \"Hola mundo desde el microservicio!\"\n    }\n",
    "user": "bellaarrieta05@gmail.com"
  },
  {
    "id": "3f6b988a2ecf",
    "name": "aaaay",
    "processing_type": "Hola Mundo",
    "endpoint": "aaaay",
    "image_name": "aaaay",
    "folder_name": "aaaay_20251012021926",
    "port": "32769",
    "status": "created",
    "code": "def main(data=None):\n    \"\"\"\n    Devuelve un saludo simple.\n    \"\"\"\n    return {\n        \"status\": \"success\",\n        \"message\": \"Hola mundo desde el microservicio!\"\n    }\n",
    "user": "Invitado"
  },
  {
    "id": "67b48f178f8e",
    "name": "consulta_roble_oak",
    "processing_type": "Consulta Roble",
    "endpoint": "consulta_roble_oak",
    "image_name": "consulta_roble_oak",
    "folder_name": "consulta_roble_oak_20251012022147",
    "port": "32770",
    "status": "created",
    "code": "# Microservicio Consulta Tabla Roble\n# El nombre de la tabla se pasa en la URL (?tableName=mi_tabla)\n# Puedes agregar más parámetros de filtro si lo desea (?columna=valor)\n# El token de acceso y el token_contract se envían por header.\n\ndef main(data=None):\n    \"\"\"\n    Consulta una tabla en Roble usando el token recibido por header y el token_contract recibido por header o parámetro.\n    \"\"\"\n    import requests\n    from flask import request\n\n    # Obtener el token de acceso desde el header Authorization\n    auth_header = request.headers.get('Authorization', '')\n    if not auth_header.startswith('Bearer '):\n        return {\"status\": \"error\", \"message\": \"Token de autenticación requerido\"}\n    token = auth_header.replace('Bearer ', '').strip()\n    if not token:\n        return {\"status\": \"error\", \"message\": \"Token vacío\"}\n\n    # Obtener el token_contract desde el header o parámetro\n    token_contract = request.headers.get('Token-Contract') or request.args.get('token_contract') or (data or {}).get(\"token_contract\")\n    if not token_contract:\n        return {\"status\": \"error\", \"message\": \"Token contract no recibido\"}\n\n    # El nombre de la tabla viene en los parámetros (?tableName=...)\n    table_name = request.args.get(\"tableName\") or (data or {}).get(\"tableName\", \"inventario\")\n\n    # Para agregar parámetros de filtro (?columna=valor)\n    params = {\"tableName\": table_name}\n    for k, v in (data or {}).items():\n        if k not in [\"token_contract\", \"tableName\", \"roble_token\"]:  \n            params[k] = v\n    for k, v in request.args.items():\n        if k not in [\"token_contract\", \"tableName\", \"roble_token\"]:  \n            params[k] = v\n\n    # Consulta la tabla en Roble\n    res = requests.get(\n        f\"https://roble-api.openlab.uninorte.edu.co/database/{token_contract}/read\",\n        headers={\"Authorization\": f\"Bearer {token}\"},\n        params=params\n    )\n    if res.status_code == 200:\n        return {\"status\": \"success\", \"roble_data\": res.json()}\n    elif res.status_code == 401:\n        return {\"status\": \"error\", \"message\": \"Token inválido o expirado\", \"code\": 401}\n    elif res.status_code == 403:\n        return {\"status\": \"error\", \"message\": \"Acceso denegado\", \"code\": 403}\n    else:\n        return {\"status\": \"error\", \"message\": f\"Roble error: {res.status_code}\", \"details\": res.text}\n",
    "user": "Invitado"
  }
]